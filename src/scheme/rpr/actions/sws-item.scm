;; auto-generated file. see gen.scm
(ns rpr.actions.sws-item
  :require ((rpr) (rpr.common)))
(define cmd rpr.common/cmd) ;; runs either native actions (with number id) or named actions (eg SWS)

(define (set-selected-item{s}-to-color-white) (cmd "_SWS_WHITEITEM"))
(define (set-selected-item{s}-to-color-black) (cmd "_SWS_BLACKITEM"))
(define (set-selected-item{s}-to-next-custom-color) (cmd "_SWS_COLITEMNEXTCUST"))
(define (set-selected-item{s}-to-one-random-custom-color) (cmd "_SWS_ITEMRANDCOL"))
(define (set-selected-item{s}-to-random-custom-color{s}) (cmd "_SWS_ITEMRANDCOLS"))
(define (set-selected-item{s}-to-color-gradient-per-track) (cmd "_SWS_ITEMTRACKGRAD"))
(define (set-selected-item{s}-to-color-gradient) (cmd "_SWS_ITEMGRAD"))
(define (set-selected-item{s}-to-ordered-custom-colors-per-track) (cmd "_SWS_ITEMORDCOLTRACK"))
(define (set-selected-item{s}-to-ordered-custom-colors) (cmd "_SWS_ITEMORDCOL"))
(define (set-selected-item{s}-to-respective-track-color) (cmd "_SWS_ITEMTRKCOL"))
(define (set-selected-track{s}-item{s}-to-one-random-color) (cmd "_SWS_RANDOMCOLALL"))
(define (set-selected-track{s}-item{s}-to-custom-color...) (cmd "_SWS_CUSTOMCOLALL"))
(define (set-takes-in-selected-item{s}-to-random-custom-color{s}) (cmd "_SWS_TAKESRANDCOLS"))
(define (set-takes-in-selected-item{s}-to-color-gradient) (cmd "_SWS_TAKEGRAD"))
(define (set-takes-in-selected-item{s}-to-ordered-custom-colors) (cmd "_SWS_TAKEORDCOL"))
(define (create-regions-from-selected-items-{name-by-active-take}) (cmd "_SWS_REGIONSFROMITEMS"))
(define (restore-last-item-selection-on-selected-track{s}) (cmd "_SWS_RESTLASTSEL"))
(define (save-selected-item{s}) (cmd "_SWS_SAVEALLSELITEMS1"))
(define (restore-saved-selected-item{s}) (cmd "_SWS_RESTALLSELITEMS1"))
(define (select-item{s}-with-saved-state-on-selected-track{s}) (cmd "_SWS_SELWITHSTATE"))
(define (set-item-fades-to-crossfade-lengths) (cmd "_XENAKIOS_AUTOFADETOFADE"))
(define (set-item-fades-to-default-length) (cmd "_SWS_DEFAULTFADES"))
(define (analyze-and-display-item-peak-and-rms-{entire-item}) (cmd "_SWS_ANALYZEITEM"))
(define (move-cursor-to-item-peak-sample) (cmd "_SWS_FINDITEMPEAK"))
(define (organize-items-by-peak) (cmd "_SWS_PEAKORGANIZE"))
(define (organize-items-by-rms-{entire-item}) (cmd "_SWS_RMSORGANIZE"))
(define (organize-items-by-peak-rms) (cmd "_SWS_RMSPEAKORGANIZE"))
(define (normalize-items-to-rms-{entire-item}) (cmd "_SWS_NORMRMS"))
(define (normalize-item{s}-to-peak-rms) (cmd "_SWS_NORMPEAKRMS"))
(define (normalize-items-to-overall-peak-rms) (cmd "_SWS_NORMPEAKRMSALL"))
(define (copy-items-tracks-env-{obey-time-selection}) (cmd "_SWS_SMARTCOPY"))
(define (cut-items-tracks-env-{obey-time-selection}) (cmd "_SWS_SMARTCUT"))
(define (remove-items-tracks-env,-{obey-time-selection}) (cmd "_SWS_SMARTREMOVE"))
(define (split-items-at-time-selection-{if-exists},-play-cursor-{during-playback},-else-at-edit-cursor) (cmd "_SWS_SMARTSPLIT"))
(define (split-items-at-time-selection-{if-exists},-else-at-edit-cursor-{also-during-playback}) (cmd "_SWS_SMARTSPLIT2"))
(define (split-items-at-time-selection,-edit-cursor,-play-cursor-{during-playback},-or-mouse-cursor) (cmd "_SWS_TRIPLESPLIT"))
(define (split-items-at-time-selection,-edit-cursor-{also-during-playback},-or-mouse-cursor) (cmd "_SWS_TRIPLESPLIT2"))
(define (unselect-all-items-tracks-env-points-{depending-on-focus}) (cmd "_SWS_SMARTUNSEL"))
(define (unselect-all-items-tracks-env-points) (cmd "_SWS_UNSELALL"))
(define (set-time-selection-to-selected-items-{skip-if-time-selection-exists}) (cmd "_SWS_SAFETIMESEL"))
(define (toggle-mute-of-items-on-selected-track{s}) (cmd "_SWS_TOGITEMMUTE"))
(define (delete-all-items-on-selected-track{s}) (cmd "_SWS_DELALLITEMS"))
(define (loop-section-of-selected-item{s}) (cmd "_SWS_LOOPITEMSECTION"))
(define (move-selected-item{s}-left-edge-to-edit-cursor) (cmd "_SWS_ITEMLEFTTOCUR"))
(define (move-selected-item{s}-right-edge-to-edit-cursor) (cmd "_SWS_ITEMRIGHTTOCUR"))
(define (crossfade-adjacent-selected-items-{move-edges-of-adjacent-items}) (cmd "_SWS_CROSSFADE"))
(define (set-selected-items-length...) (cmd "_SWS_SETITEMLEN"))
(define (unselect-all-items-on-selected-track{s}) (cmd "_SWS_UNSELONTRACKS"))
(define (select-lower-leftmost-item-on-selected-track{s}) (cmd "_SWS_SELLLI"))
(define (select-upper-leftmost-item-on-selected-track{s}) (cmd "_SWS_SELULI"))
(define (unselect-upper-leftmost-item-on-selected-track{s}) (cmd "_SWS_UNSELULI"))
(define (toggle-selection-of-items-on-selected-track{s}) (cmd "_SWS_TOGITEMSEL"))
(define (select-muted-items) (cmd "_SWS_SELMUTEDITEMS"))
(define (select-unmuted-items) (cmd "_SWS_SELUNMUTEDITEMS"))
(define (select-muted-items-on-selected-track{s}) (cmd "_SWS_SELMUTEDITEMS2"))
(define (select-unmuted-items-on-selected-track{s}) (cmd "_SWS_SELUNMUTEDITEMS2"))
(define (select-next-item-{across-tracks}) (cmd "_SWS_SELNEXTITEM"))
(define (select-previous-item-{across-tracks}) (cmd "_SWS_SELPREVITEM"))
(define (select-next-item,-keeping-current-selection-{across-tracks}) (cmd "_SWS_SELNEXTITEM2"))
(define (select-previous-item,-keeping-current-selection-{across-tracks}) (cmd "_SWS_SELPREVITEM2"))
(define (select-locked-items) (cmd "_SWS_SELLOCKITEMS"))
(define (select-locked-items-on-selected-track{s}) (cmd "_SWS_SELLOCKITEMS2"))
(define (add-item{s}-to-right-of-selected-item{s}-to-selection) (cmd "_SWS_ADDRIGHTITEM"))
(define (add-item{s}-to-left-of-selected-item{s}-to-selection) (cmd "_SWS_ADDLEFTITEM"))
(define (set-move-envelope-points-with-items-on) (cmd "_SWS_MVPWIDON"))
(define (set-move-envelope-points-with-items-off) (cmd "_SWS_MVPWIDOFF"))
(define (toggle-seek-playback-on-item-move-size) (cmd "_SWS_TOGSEEKMODE1"))
(define (toggle-grid-lines-over-under-items) (cmd "_SWS_TOGGRID_OU"))
(define (toggle-selecting-one-grouped-item-selects-group) (cmd "_SWS_TOGSELGROUP"))
(define (set-selected-track{s}-record-output-mode-based-on-items) (cmd "_SWS_SETRECSRCOUT"))
(define (set-track-name-from-first-selected-item-on-track) (cmd "_SWS_NAMETKLIKEITEM"))
(define (set-track-name-from-first-selected-item-in-project) (cmd "_SWS_NAMETKLIKEFIRST"))
(define (select-only-track{s}-with-selected-item{s}) (cmd "_SWS_SELTRKWITEM"))
(define (vertical-zoom-to-selected-items) (cmd "_SWS_VZOOMIITEMS"))
(define (vertical-zoom-to-selected-items,-minimize-others) (cmd "_SWS_VZOOMITEMSMIN"))
(define (horizontal-zoom-to-selected-items) (cmd "_SWS_HZOOMITEMS"))
(define (zoom-to-selected-items) (cmd "_SWS_ITEMZOOM"))
(define (zoom-to-selected-items,-minimize-others) (cmd "_SWS_ITEMZOOMMIN"))
(define (zoom-to-selected-items-or-time-selection) (cmd "_SWS_ZOOMSIT"))
(define (zoom-to-selected-items-or-time-selection,-minimize-others) (cmd "_SWS_ZOOMSITMIN"))
(define (toggle-zoom-to-selected-items-or-time-selection) (cmd "_SWS_TOGZOOMI"))
(define (toggle-zoom-to-selected-items-or-time-selection,-minimize-other-tracks) (cmd "_SWS_TOGZOOMIMIN"))
(define (toggle-zoom-to-selected-items-or-time-selection,-hide-other-tracks) (cmd "_SWS_TOGZOOMIHIDE"))
(define (toggle-zoom-to-selected-items) (cmd "_SWS_TOGZOOMIONLY"))
(define (toggle-zoom-to-selected-items,-minimize-other-tracks) (cmd "_SWS_TOGZOOMIONLYMIN"))
(define (toggle-zoom-to-selected-items,-hide-other-tracks) (cmd "_SWS_TOGZOOMIONLYHIDE"))
(define (toggle-horizontal-zoom-to-selected-items-or-time-selection) (cmd "_SWS_TOGZOOMHORIZ"))
(define (toggle-horizontal-zoom-to-selected-items) (cmd "_SWS_TOGZOOMHORIZ_ITEMS"))
