#+PROPERTY: header-args:sh :session *reaper-repl*

* Linux
** Optional: symlinks
   #+BEGIN_SRC sh
ln -s `readlink -f ../iPlug2` subprojects/iPlug2
ln -s `readlink -f ../s7-imgui` subprojects/s7_imgui
ln -s `readlink -f ../s7` subprojects/s7
ln -s `readlink -f ../SDL` subprojects/sdl2
ln -s `readlink -f ../SDL_net` subprojects/sdl_net
ln -s `readlink -f ../imgui` subprojects/imgui
ln -s `readlink -f ../SFML` subprojects/SFML

# TODO the s7-imgui should accept flags about which features we want
# for example, I don't need the native-file-dialog here
ln -s `readlink -f ../nativefiledialog` subprojects/nfd
   #+END_SRC

** Necessary symlinks (or copy)
   Necessary s7-imgui scheme files: contain imgui macros etc.
   #+BEGIN_SRC sh
ln -s `readlink -f subprojects/s7_imgui/src/scheme/aod` src/scheme/aod
ln -s `readlink -f src/scheme/` build/scheme
   #+END_SRC

** Building
   #+BEGIN_SRC sh
meson setup build
meson setup --reconfigure build
ninja -C build
meson setup --wipe build
# to cleanup/regenerate
rm -rf build
   #+END_SRC

** Launching REAPER
   (pardon the hardcoded reaper path for now)
   #+BEGIN_SRC sh
# installing
ln -s `readlink -f build/reaper_s7-reaper-repl.so` ~/Downloads/reaper_linux_x86_64/REAPER/Plugins
# scheme files: available in Plugins/s7_reaper
ln -s `readlink -f src/scheme/` ~/Downloads/reaper_linux_x86_64/REAPER/Plugins/s7_reaper
~/Downloads/reaper_linux_x86_64/REAPER/reaper
   #+END_SRC

** Testing the socket (REPL)
   #+NAME: >repl
   #+BEGIN_SRC emacs-lisp
(save-selected-window
  (run-scheme "netcat localhost 1234")
  ;; sending something to see if the repl process is alive
  (scheme-send-string "\n"))
   #+END_SRC

   #+CALL: >repl()

   #+RESULTS:

   #+BEGIN_SRC scheme
(+ 1 2 3)

;; insert new track 40001
((rpr 'Main_OnCommand) 40001)
;; select all 40296
((rpr 'Main_OnCommand) 40296)
;; remove
((rpr 'Main_OnCommand) 40005)

(ns-require rpr :as rpr)
(rpr/Main_OnCommand 40001)
(rpr/count-tracks)
(rpr/CountSelectedMediaItems)
(rpr/GetSelectedMediaItem 0)

(define x (rpr/GetSelectedMediaItem 0))
x

(rpr/SetMediaItemSelected x #t)
(rpr/UpdateArrange)
   #+END_SRC


* COMMENT Local variables
  # Local Variables:
  # eval: (aod.org-babel/generate-call-buttons)
  # eval: (setq-local org-confirm-babel-evaluate nil)
  # End:  
